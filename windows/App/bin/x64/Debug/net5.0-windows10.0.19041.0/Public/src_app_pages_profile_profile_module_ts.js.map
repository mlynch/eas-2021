{"version":3,"file":"src_app_pages_profile_profile_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;CACF,CAAC;AAMK,IAAM,wBAAwB,GAA9B,MAAM,wBAAwB;;AAAxB,wBAAwB;IAJpC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,wBAAwB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACF;AACA;AACuB;AACvB;AAWtC,IAAM,iBAAiB,GAAvB,MAAM,iBAAiB;;AAAjB,iBAAiB;IAT7B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,6EAAwB;SACzB;QACD,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBoB;AACiC;AACH;AAClB;AACc;AAQrE,IAAM,WAAW,GAAjB,MAAM,WAAW;IAEtB,YAAmB,eAAgC,EACzC,WAAkC,EAClC,YAA0B,EAC1B,YAA6B,EAAS,eAAgC;QAH7D,oBAAe,GAAf,eAAe,CAAiB;QACzC,gBAAW,GAAX,WAAW,CAAuB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAiB;QAAS,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAE/E,QAAQ;;QACd,CAAC;KAAA;IAEK,eAAe;;YACnB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QACnD,CAAC;KAAA;IAEK,aAAa;;YACjB,MAAM,KAAK,GAAwB,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBACnE,SAAS,EAAE,iFAAa;gBACxB,YAAY,EAAE,IAAI;gBAClB,iBAAiB,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ;gBAC7C,cAAc,EAAE,EAAE;aACnB,CAAC,CAAC;YAEH,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACnC,wEAAwE;gBACxE,IAAI,MAAM,CAAC,IAAI,EAAE;oBACf,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;YACH,CAAC,CAAC,CAAC;YAEH,OAAO,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC;KAAA;IAEY,OAAO;;YAClB,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;YACtC,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAEhC,uEAAuE;YACvE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC5B,CAAC;KAAA;IAEa,YAAY;;YACxB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,OAAO,EAAE,4CAA4C;gBACrD,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,SAAS;aACjB,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;;;;;;;;;AAjDU,WAAW;IALvB,wDAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,oEAAkC;;KAEnC,CAAC;GACW,WAAW;AAAA","sources":["./src/app/pages/profile/profile-routing.module.ts","./src/app/pages/profile/profile.module.ts","./src/app/pages/profile/profile.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ProfilePageRoutingModule } from './profile-routing.module';\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { IonRouterOutlet, ModalController, ToastController } from '@ionic/angular';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { VaultService } from 'src/app/services/vault.service';\nimport { SwagModalPage } from '../../components/swag-modal/swag-modal.page';\n\n\n@Component({\n  selector: 'app-swag',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  constructor(public modalController: ModalController,\n    private authService: AuthenticationService,\n    private vaultService: VaultService,\n    private routerOutlet: IonRouterOutlet, public toastController: ToastController) { }\n\n  async ngOnInit() {\n  }\n\n  async ionViewDidEnter() {\n    const token = await this.authService.getAccessToken();\n    console.log(this.authService.decodeToken(token));\n  }\n\n  async openSwagModal() {\n    const modal: HTMLIonModalElement = await this.modalController.create({\n      component: SwagModalPage,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps: {}\n    });\n\n    modal.onDidDismiss().then((result) => {\n      // Data will be undefined if modal was swiped closed or back button used\n      if (result.data) {\n        this.presentToast();\n      }\n    });\n\n    return await modal.present();\n  }\n\n  public async signOut() {\n    await this.authService.clearStorage();\n    await this.vaultService.clear();\n\n    // Note: Logout will cause the app to reload so we cannot await logout!\n    this.authService.logout();\n  }\n\n  private async presentToast(): Promise<void> {\n    const toast = await this.toastController.create({\n      message: 'Thanks! Winners will be notified by email.',\n      duration: 2000,\n      color: 'primary'\n    });\n\n    await toast.present();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}